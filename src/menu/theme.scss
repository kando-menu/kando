/* ------------------------------------------------------------------------------------- #
#                                                                                        #
#      |  /  __|   \ |       _ \   _ \     This file belongs to Ken-Do,                  #
#      . <   _|   .  | ____| |  | (   |    the open-source cross-platform pie menu.      #
#     _|\_\ ___| _|\_|      ___/ \___/     Read more on github.com/ken-do-menu/ken-do    #
#                                                                                        #
# -------------------------------------------------------------------------------------- #

SPDX-FileCopyrightText: Simon Schneegans <code@simonschneegans.de>
SPDX-License-Identifier: MIT
*/

$material-icons-font-path: '~material-icons/iconfont/';
@import 'material-icons/iconfont/round.scss';

$root-size: 100px;
$child-size: 50px;
$grandchild-size: 15px;
$item-color: rgb(255, 255, 255);
$icon-color: rgb(66, 66, 66);
$hovered-item-color: rgb(255, 200, 200);
$border-color: rgb(109, 109, 109);

$transition: all 150ms cubic-bezier(0.775, 1.325, 0.535, 1.01);

.node {
  transition: $transition;
}

.item {
  transition: $transition;
  border: 1px solid $border-color;
  color: transparent;

  // Center text.
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 36px;
}

// Active item.
.node.active > .item {
  top: calc(-1 * $root-size / 2);
  left: calc(-1 * $root-size / 2);
  width: $root-size;
  height: $root-size;
  background-color: $item-color;
  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.5);
  color: $icon-color;
  font-size: 80px;

  transform: scale(0.9);
}

.node.active:has(> .node.hovered) > .item {
  transform: scale(1);
  color: transparent;
}

// Child items.
.node.parent > .item,
.node.child > .item {
  top: calc(-1 * $child-size / 2);
  left: calc(-1 * $child-size / 2);
  width: $child-size;
  height: $child-size;
  background-color: $item-color;
  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.5);
  z-index: 1;
  color: $icon-color;

  transform: scale(1);
}

.node.parent.hovered > .item,
.node.child.hovered > .item {
  transform: scale(1.1);
  background-color: $hovered-item-color;
}

.node.dragged {
  transition: none;
}

// Grandchild items.
.node.grandchild > .item {
  top: calc(-1 * $grandchild-size / 2);
  left: calc(-1 * $grandchild-size / 2);
  width: $grandchild-size;
  height: $grandchild-size;
  background-color: $border-color;
  z-index: 0;
}
